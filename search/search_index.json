{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Application de Pr\u00e9diction de Production \u00c9nerg\u00e9tique","text":"<p>Bienvenue dans la documentation officielle du projet Production_ENR.</p> <p>Cette application permet de pr\u00e9dire la production d\u2019\u00e9nergie \u00e9olienne, solaire et hydro\u00e9lectrique \u00e0 partir de donn\u00e9es m\u00e9t\u00e9orologiques en temps r\u00e9el.</p>"},{"location":"#acces-rapide","title":"Acc\u00e8s rapide","text":"<ul> <li>Installation</li> <li>Utilisation de l\u2019application</li> <li>Structure du projet</li> <li>Documentation de l\u2019API</li> </ul>"},{"location":"api_reference/","title":"R\u00e9f\u00e9rence API","text":""},{"location":"api_reference/#solaire","title":"Solaire","text":""},{"location":"api_reference/#endpoint-predictsolaire","title":"Endpoint : <code>/predict/solaire</code>","text":"<p>Pr\u00e9dit la production solaire \u00e0 partir de l'irradiance globale et de la temp\u00e9rature</p>"},{"location":"api_reference/#methode-http","title":"M\u00e9thode HTTP","text":"<p><code>POST</code></p>"},{"location":"api_reference/#corps-de-la-requete-json","title":"Corps de la requ\u00eate (JSON)","text":"Champ Type Description <code>global_tilted_irradiance</code> float Irradiance globale inclin\u00e9e (W/m\u00b2) <code>temperature_2m</code> float Temp\u00e9rature moyenne \u00e0 2 m (\u00b0C)"},{"location":"api_reference/#exemple-de-requete","title":"Exemple de requ\u00eate","text":""},{"location":"api_reference/#post-predictsolaire-content-type-applicationjson-global_tilted_irradiance-4502-temperature_2m-20","title":"<pre><code>POST /predict/solaire\nContent-Type: application/json\n\n{\n  \"global_tilted_irradiance\": 450.2,\n  \"temperature_2m\": 20,\n}\n</code></pre>","text":""},{"location":"api_reference/#reponse","title":"R\u00e9ponse","text":"<pre><code>{\"prediction\": 532.41}\n</code></pre> <p>Aucun traitement additionnel ni features d\u00e9riv\u00e9es n\u00e9cessaires.</p>"},{"location":"api_reference/#hydro-electrique","title":"Hydro-\u00e9lectrique","text":""},{"location":"api_reference/#endpoint-predicthydro","title":"Endpoint : <code>/predict/hydro</code>","text":""},{"location":"api_reference/#methode-http_1","title":"M\u00e9thode HTTP","text":"<p><code>POST</code></p>"},{"location":"api_reference/#corps-de-la-requete-json_1","title":"Corps de la requ\u00eate (JSON)","text":"Champ Type Description <code>QmnJ</code> float D\u00e9bit moyen (m\u00b3/s) <code>HIXnJ</code> float Hauteur d\u2019eau"},{"location":"api_reference/#exemple-de-requete_1","title":"Exemple de requ\u00eate","text":"<pre><code>POST /predict/hydro\nContent-Type: application/json\n\n{\n  \"QmnJ\": 25.3,\n  \"HIXnJ\": 12.7,\n}\n</code></pre>"},{"location":"api_reference/#reponse_1","title":"R\u00e9ponse","text":""},{"location":"api_reference/#prediction-13155","title":"<pre><code>{\"prediction\": 131.55}\n</code></pre>","text":""},{"location":"api_reference/#eolienne","title":"Eolienne","text":""},{"location":"api_reference/#endpoint-predicteolienne","title":"Endpoint : <code>/predict/eolienne</code>","text":"<p>Pr\u00e9dit la production \u00e9olienne \u00e0 partir de la vitesse moyenne du vent, le potentiel \u00e9nerg\u00e9tique du vent et la densit\u00e9 de l'air</p>"},{"location":"api_reference/#methode-http_2","title":"M\u00e9thode HTTP","text":"<p><code>POST</code></p>"},{"location":"api_reference/#corps-de-la-requete-json_2","title":"Corps de la requ\u00eate (JSON)","text":"Champ Type Description Contraintes <code>wind_speed_10m_mean</code> <code>float</code> Vitesse moyenne du vent \u00e0 10 m\u00e8tres (m/s). Doit \u00eatre &gt; 0 <code>pressure_msl_mean</code> <code>float</code> Pression moyenne au niveau de la mer (hPa). Doit \u00eatre &gt; 0 <code>temperature_2m_mean</code> <code>float</code> Temp\u00e9rature moyenne \u00e0 2 m\u00e8tres (\u00b0C). Doit \u00eatre &gt; 0"},{"location":"api_reference/#exemple-de-requete_2","title":"Exemple de requ\u00eate","text":"<pre><code>POST /predict/eolienne\nContent-Type: application/json\n\n{\n  \"wind_speed_10m_mean\": 5.6,\n  \"pressure_msl_mean\": 1013.2,\n  \"temperature_2m_mean\": 18.4\n}\n</code></pre>"},{"location":"api_reference/#traitement-interne","title":"Traitement interne","text":"<p>Lorsqu'un requ\u00eate est re\u00e7ue :</p> <ol> <li> <p>Les trois entr\u00e9es (wind_speed_10m_mean, pressure_msl_mean, temperature_2m_mean) sont valid\u00e9es.</p> </li> <li> <p>Si l'une d'elles vaut 0, l'API renvoie une erreur.</p> </li> <li> <p>Deux nouvelles features d\u00e9riv\u00e9es sont cr\u00e9\u00e9es:</p> </li> <li> <p>wind_speed3 (variable qui exprime la r\u00e9alit\u00e9 physique de la production d'\u00e9nergie \u00e9olienne)</p> </li> <li> <p>temp_press (variable de densit\u00e9 de l'air)</p> </li> <li> <p>Le mod\u00e8le eolienne_random_forest_model.pkl est charg\u00e9 via ModelTrain.load().</p> </li> <li> <p>Le mod\u00e8le effectue une pr\u00e9diction de la production \u00e9olienne.</p> </li> </ol>"},{"location":"api_reference/#reponses","title":"R\u00e9ponses","text":"<ul> <li>Succ\u00e8s - 200 OK</li> </ul> <pre><code>{\n    \"prediction\": 127.53\n}\n</code></pre>"},{"location":"api_reference/#erreur-400-bad-request","title":"Erreur - 400 Bad Request","text":"<pre><code>{\n    \"error\": \"wind_speed_10m_mean, pressure_msl_mean et temperature_2m_mean doit \u00eatre sup\u00e9rieur \u00e0 0\"\n}\n</code></pre>"},{"location":"api_reference/#notes-techniques","title":"Notes techniques","text":"<ul> <li>Le mod\u00e8le est une Random Forest Regressor (scikit-learn).</li> <li>Les features d\u00e9riv\u00e9es am\u00e9liorent la corr\u00e9lation physique avec la production r\u00e9elle.</li> <li>L'API est con\u00e7ue pour \u00eatre int\u00e9gr\u00e9e dans une interface Streamlit ou un autre client web de pr\u00e9diction.</li> <li>Les pr\u00e9dictions sont instantan\u00e9es et ne n\u00e9cessitent pas d'acc\u00e8s \u00e0 la base de donn\u00e9es.</li> </ul>"},{"location":"architecture/","title":"Architecture","text":""},{"location":"architecture/#architecture-du-projet","title":"Architecture du projet","text":"<p>\u2500\u2500</p> <pre><code>production_enr/\n|\u2500\u2500backend/\n|  |\u2500\u2500app/\n|     |\u2500\u2500routes/\n|        |\u2500\u2500eolienne.py\n|        |\u2500\u2500hydro.py\n|        |\u2500\u2500solaire.py\n|     |\u2500\u2500main.py           # App FastAPI\n|     |\u2500\u2500model_trainer.py  # Classe d'entra\u00eenement des mod\u00e8les\n|     |\u2500\u2500train_models.py   # Script principal d'entra\u00eenement\n|  |\u2500\u2500saved_models/        # Dossier de sauvegarde des mod\u00e8les\n|\u2500\u2500docs/       # Documentation du projet\n|\u2500\u2500frontend/\n|  |\u2500\u2500pages\n|     |\u2500\u2500Hydro.py\n|     |\u2500\u2500Solar.py\n|     |\u2500\u2500Wind.py\n|  |\u2500\u2500app.py               # Interface streamlit\n|\u2500\u2500handlers/\n|  |\u2500\u2500datahandler.py       # Classe de gestion des donn\u00e9es \n|\u2500\u2500notebooks/\n|  |\u2500\u2500notebook_prod_eolienne.ipynb\n|  |\u2500\u2500notebook_prod_hydro.ipynb\n|  |\u2500\u2500notebook_samy.ipynb  # Analyse des donn\u00e9es de production solaire\n|  |\u2500\u2500notebook_select_model.ipynb\n|\u2500\u2500mkdocs.yaml             # Fichier de configuration de documentation\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#cloner-le-projet","title":"Cloner le projet","text":"<pre><code>git clone https://github.com/GaetanCSimplon/production_enr.git\n\ncd production_enr\n</code></pre>"},{"location":"installation/#creer-et-activer-un-environnement-virtuel","title":"Cr\u00e9er et activer un environnement virtuel","text":"<pre><code>python -m venv .venv\nsource .venv/bin/activate    # (Linux/Mac)\n.venv\\Scripts\\activate       # (Windows)\n</code></pre>"},{"location":"installation/#installer-les-dependances","title":"Installer les d\u00e9pendances","text":"<pre><code>uv sync\n</code></pre>"},{"location":"installation/#connexion-a-fastapi","title":"Connexion \u00e0 fastapi","text":"<pre><code>cd backend/app/\nuv run --active fastapi dev main.py\n</code></pre>"},{"location":"installation/#connexion-a-linterface-streamlit","title":"Connexion \u00e0 l'interface Streamlit","text":"<pre><code>cd frontend/\nstreamlit run app.py\n</code></pre>"},{"location":"utilisation/","title":"Utilisation","text":""},{"location":"utilisation/#via-interface","title":"Via interface","text":"<ol> <li> <p>Choisir le type d\u2019\u00e9nergie (\u00e9olienne, solaire, hydro)</p> </li> <li> <p>Renseigner les variables m\u00e9t\u00e9o :</p> </li> <li> <p>\u00c9olien \u2192 wind_speed, temperature, pression</p> </li> <li> <p>L\u2019application calcule automatiquement :</p> </li> <li> <p>wind_speed3 = wind_speed ** 3</p> </li> <li> <p>temp_press = temperature * pression</p> </li> <li> <p>L\u2019API FastAPI envoie ces donn\u00e9es au mod\u00e8le entra\u00een\u00e9</p> </li> <li> <p>Le r\u00e9sultat (production pr\u00e9dite) est affich\u00e9 dans Streamlit</p> </li> </ol>"},{"location":"utilisation/#modele-de-prediction","title":"Mod\u00e8le de pr\u00e9diction","text":"\u00c9nergie Variables d\u2019entr\u00e9e Mod\u00e8le utilis\u00e9 \u00c9olienne <code>wind_speed_10m_mean</code>, <code>pressure_msl_mean</code>, <code>temperature_2m_mean</code>, <code>wind_speed3</code>, <code>temp_press</code> Random Forest Solaire <code>global_tilted_irradiance</code>, <code>temperature_2m</code> Ridge Regression Hydro <code>QmnJ</code>, <code>HIXnJ</code> Random Forest"},{"location":"utilisation/#entrainer-les-modeles","title":"Entra\u00eener les mod\u00e8les","text":"<p>Pour r\u00e9entrainer un mod\u00e8le :</p> <p><pre><code># Pour la production \u00e9olienne\npython backend/app/train_model.py eolienne\n# Pour la production solaire\npython backend/app/train_model.py solaire\n# Pour la production hydro-\u00e9lectrique\npython backend/app/train_model.py hydro\n</code></pre> - Le mod\u00e8le est sauvegard\u00e9 automatiquement apr\u00e8s entra\u00eenement dans le dossier saved_models</p>"}]}